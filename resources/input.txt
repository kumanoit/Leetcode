
private static int getMinimumConferenceRoomCount(final int[][] intervals) {
    if (intervals.length < 2) {
        return intervals.length;
    }

    Map<Integer, Integer> map = new TreeMap<Integer, Integer>();
    for(int i = 0; i < intervals.length; i++) {
        map.put(intervals[i][0], map.getOrDefault(intervals[i][0], 0) + 1);
        map.put(intervals[i][1], map.getOrDefault(intervals[i][1], 0) - 1);
    }
    int minConferenceRoomCount = 0;
    int currentConferenceRoomCount = 0;
    for(int value : map.values()) {
        currentConferenceRoomCount += value;
        minConferenceRoomCount = Math.max(minConferenceRoomCount, currentConferenceRoomCount);
    }
    return currentConferenceRoomCount;
}
